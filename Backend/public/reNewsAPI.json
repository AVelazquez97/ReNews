{
    "openapi": "3.0.0",
    "info": {
        "title": "ReNewsAPI",
        "version": "1.7"
    },
    "servers": [
        {
            "url": "https://api.renews.alexisvelazquez.tech/api",
            "description": "Production Server"
        },
        {
            "url": "http://localhost:8080/api",
            "description": "Development Server"
        }
    ],
    "paths": {
        "/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get all posts",
                "operationId": "d315585cf5a27a04489f8656827303fe",
                "responses": {
                    "200": {
                        "description": "Success: Retrieved all posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostOutput"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No posts found"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Create a new post",
                "operationId": "f76ba79bab61540e26dc207c8eddd9c7",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success: Post created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostOutputWithoutComments"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid post data"
                    },
                    "409": {
                        "description": "A post with this title already exists"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/posts/pending": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get all pending posts",
                "operationId": "2e4ffebee9006d6bd51eb27adc516d3f",
                "responses": {
                    "200": {
                        "description": "Success: Retrieved all pending posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostOutput"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No pending posts found"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/posts/user/{userId}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get all posts by a user",
                "operationId": "8ebe446c97289b7a2e1eb3d63eef226f",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The id of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Retrieved all posts by the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostOutput"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No posts found for the user"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/posts/{id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get a post by id",
                "operationId": "31d461bdf90341d8563f7ea4a8066a70",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the post",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Post found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostOutput"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete a post",
                "operationId": "962f3387e622836aa0da015a3f95ccc5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the post to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success: Post deleted"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/posts/search/{titleFragment}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Search for posts by title",
                "operationId": "67ef84ed5d3dcb73db78ce763dda4def",
                "parameters": [
                    {
                        "name": "titleFragment",
                        "in": "path",
                        "description": "The title fragment to search for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Retrieved posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PostOutput"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid title fragment"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/posts/{postId}/comment": {
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Add a comment to a post",
                "operationId": "ac39bef9b1e539a854bf7618ef1d8f7f",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "The id of the post to add the comment to",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ownerId",
                                    "body",
                                    "date"
                                ],
                                "properties": {
                                    "ownerId": {
                                        "description": "The id of the user who is making the comment",
                                        "type": "integer"
                                    },
                                    "body": {
                                        "description": "The body of the comment",
                                        "type": "string"
                                    },
                                    "date": {
                                        "description": "The date and time when the comment was made",
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "The id of the created comment",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/posts/approve/{id}": {
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Approve a pending post",
                "operationId": "008196deebd9503085833c44e446e911",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the post to approve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Post approved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "The approved post's id",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Post is already approved"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/posts/{postId}/comment/{commentId}": {
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete a comment",
                "operationId": "556a7d855efb8a47d7c1370367dd7e42",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "The id of the post the comment is associated with",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "commentId",
                        "in": "path",
                        "description": "The id of the comment to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success: Comment deleted"
                    },
                    "404": {
                        "description": "Post or comment not found"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Get all tags",
                "operationId": "5b41ac2fae94a0362485d6e51fdb2cf0",
                "responses": {
                    "200": {
                        "description": "Success: Retrieved all tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TagOutput"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No tags found"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tags"
                ],
                "summary": "Create a tag",
                "operationId": "8be8d6babd9564d72a8a49b18d0c4c7b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success: Created a tag",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagOutput"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Field name is required"
                    },
                    "409": {
                        "description": "A tag with this name already exists"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/tags/{id}": {
            "get": {
                "tags": [
                    "Tags"
                ],
                "summary": "Get tag by id",
                "operationId": "836d3f5ff59a83dc08011c32d831dbcb",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Retrieved tag",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TagOutput"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No tag found"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "operationId": "25d1f264559201c32156b3fa97e60aca",
                "responses": {
                    "200": {
                        "description": "Success: Retrieved all users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserOutput"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No users found"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by id",
                "operationId": "309783913bbfab21b2914d97a69abc9a",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: Retrieved user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserOutput"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "operationId": "c5e9588e7a9a46bceb80c12571eb4a03",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: User updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserOutput"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user data"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "409": {
                        "description": "Username or email already exists"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "82b63956ef1ce923b08f7c143bc31689",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success: User deleted"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Log in a user",
                "operationId": "2ab6a9d6ad2d8ad68fcb840350671e8d",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "usernameOrEmail",
                                    "password"
                                ],
                                "properties": {
                                    "usernameOrEmail": {
                                        "description": "The user's username or email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "The user's password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: User logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserOutput"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized: Invalid Username or Password"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register a user",
                "operationId": "2beec4e088d9b31b23cb16ef2f48f0f7",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success: User registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserOutput"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Username or email already exists"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/users/forgotPassword": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Forgot password",
                "operationId": "7823a26d3bee19b0973c6064e52831a2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "The user's email",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success: New password email sent"
                    },
                    "400": {
                        "description": "Invalid user data"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        },
        "/users/makeAdmin/{id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Make a user admin",
                "operationId": "13140ddf61282071dba17ec63000f321",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success: User made admin",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAdminOutput"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User is already an admin"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CommentInput": {
                "required": [
                    "body",
                    "postId",
                    "ownerId",
                    "date"
                ],
                "properties": {
                    "id": {
                        "description": "The comment's id",
                        "type": "integer"
                    },
                    "body": {
                        "description": "The comment's body",
                        "type": "string"
                    },
                    "postId": {
                        "description": "The id of the post the comment is associated with",
                        "type": "integer"
                    },
                    "ownerId": {
                        "description": "The id of the user who made the comment",
                        "type": "integer"
                    },
                    "date": {
                        "description": "The date the comment was created",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CommentOutput": {
                "required": [
                    "id",
                    "body",
                    "postId",
                    "date"
                ],
                "properties": {
                    "id": {
                        "description": "The comment's id",
                        "type": "integer"
                    },
                    "body": {
                        "description": "The comment's body",
                        "type": "string"
                    },
                    "postId": {
                        "description": "The id of the post the comment is associated with",
                        "type": "integer"
                    },
                    "owner": {
                        "description": "The user who made the comment",
                        "properties": {
                            "id": {
                                "description": "The user's id",
                                "type": "integer"
                            },
                            "username": {
                                "description": "The user's username",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "date": {
                        "description": "The date the comment was created",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PostInput": {
                "required": [
                    "ownerId",
                    "title",
                    "body",
                    "date"
                ],
                "properties": {
                    "id": {
                        "description": "The post's id",
                        "type": "integer"
                    },
                    "ownerId": {
                        "description": "The id of the user who owns the post",
                        "type": "integer"
                    },
                    "title": {
                        "description": "The post's title",
                        "type": "string"
                    },
                    "body": {
                        "description": "The post's body",
                        "type": "string"
                    },
                    "date": {
                        "description": "The date the post was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tags": {
                        "description": "The tags associated with the post",
                        "type": "array",
                        "items": {
                            "description": "The tag's id",
                            "type": "integer"
                        }
                    }
                },
                "type": "object"
            },
            "PostOutput": {
                "required": [
                    "id",
                    "ownerId",
                    "title",
                    "body",
                    "date"
                ],
                "properties": {
                    "id": {
                        "description": "The post's id",
                        "type": "integer"
                    },
                    "owner": {
                        "description": "The user who owns the post",
                        "properties": {
                            "id": {
                                "description": "The user's id",
                                "type": "integer"
                            },
                            "username": {
                                "description": "The user's username",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "title": {
                        "description": "The post's title",
                        "type": "string"
                    },
                    "body": {
                        "description": "The post's body",
                        "type": "string"
                    },
                    "date": {
                        "description": "The date the post was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "likes": {
                        "description": "The number of likes the post has received",
                        "type": "integer"
                    },
                    "isPending": {
                        "description": "Whether the post is pending approval",
                        "type": "boolean"
                    },
                    "tags": {
                        "description": "The tags associated with the post",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TagOutput"
                        }
                    },
                    "comments": {
                        "description": "The comments on the post",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommentOutput"
                        }
                    }
                },
                "type": "object"
            },
            "PostOutputWithoutComments": {
                "required": [
                    "id",
                    "ownerId",
                    "title",
                    "body",
                    "date"
                ],
                "properties": {
                    "id": {
                        "description": "The post's id",
                        "type": "integer"
                    },
                    "owner": {
                        "description": "The user who owns the post",
                        "properties": {
                            "id": {
                                "description": "The user's id",
                                "type": "integer"
                            },
                            "username": {
                                "description": "The user's username",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "title": {
                        "description": "The post's title",
                        "type": "string"
                    },
                    "body": {
                        "description": "The post's body",
                        "type": "string"
                    },
                    "date": {
                        "description": "The date the post was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "likes": {
                        "description": "The number of likes the post has received",
                        "type": "integer"
                    },
                    "isPending": {
                        "description": "Whether the post is pending approval",
                        "type": "boolean"
                    },
                    "tags": {
                        "description": "The tags associated with the post",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TagOutput"
                        }
                    }
                },
                "type": "object"
            },
            "TagInput": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "The tag's name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TagOutput": {
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "The tag's id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The tag's name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserInput": {
                "required": [
                    "email",
                    "password",
                    "name",
                    "lastname",
                    "username"
                ],
                "properties": {
                    "id": {
                        "description": "The user's id",
                        "type": "integer"
                    },
                    "email": {
                        "description": "The user's email",
                        "type": "string"
                    },
                    "password": {
                        "description": "The user's password",
                        "type": "string"
                    },
                    "name": {
                        "description": "The user's name",
                        "type": "string"
                    },
                    "lastname": {
                        "description": "The user's lastname",
                        "type": "string"
                    },
                    "username": {
                        "description": "The user's username",
                        "type": "string"
                    },
                    "profileImage": {
                        "description": "The user's profile image",
                        "type": "string"
                    },
                    "isAdmin": {
                        "description": "Whether the user is an admin",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "UserOutput": {
                "required": [
                    "email",
                    "name",
                    "lastname",
                    "username",
                    "isAdmin"
                ],
                "properties": {
                    "id": {
                        "description": "The user's id",
                        "type": "integer"
                    },
                    "email": {
                        "description": "The user's email",
                        "type": "string"
                    },
                    "name": {
                        "description": "The user's name",
                        "type": "string"
                    },
                    "lastname": {
                        "description": "The user's lastname",
                        "type": "string"
                    },
                    "username": {
                        "description": "The user's username",
                        "type": "string"
                    },
                    "profileImage": {
                        "description": "The user's profile image",
                        "type": "string"
                    },
                    "isAdmin": {
                        "description": "Whether the user is an admin",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "UserUpdateInput": {
                "required": [
                    "name",
                    "lastname",
                    "username"
                ],
                "properties": {
                    "id": {
                        "description": "The user's id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The user's name",
                        "type": "string"
                    },
                    "lastname": {
                        "description": "The user's lastname",
                        "type": "string"
                    },
                    "username": {
                        "description": "The user's username",
                        "type": "string"
                    },
                    "profileImage": {
                        "description": "The user's profile image",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserAdminOutput": {
                "required": [
                    "id",
                    "username",
                    "email",
                    "isAdmin"
                ],
                "properties": {
                    "id": {
                        "description": "The user's id",
                        "type": "integer"
                    },
                    "username": {
                        "description": "The user's username",
                        "type": "string"
                    },
                    "email": {
                        "description": "The user's email",
                        "type": "string"
                    },
                    "isAdmin": {
                        "description": "Whether the user is an admin",
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "id": {
                "name": "id",
                "in": "path",
                "description": "The id of the user",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Posts",
            "description": "API Endpoints of Posts"
        },
        {
            "name": "Tags",
            "description": "API Endpoints of Tags"
        },
        {
            "name": "Users",
            "description": "API Endpoints of Users"
        }
    ]
}